<script>

    let student_id = null;
    let token   = $("meta[name='csrf-token']").attr("content");
    let isCreateAction = true;
    
    $('body').on('click', '#btn-add-vulnerability', function () {
        student_id = $(this).data('id');
    
        // Fetch vulnerability type with AJAX
        $.ajax({
            url: '/getVulnerabilityType',
            type: 'GET',
            cache: false,
            success: function(response) {
    
                var vulnerabilityTypes = response;
    
                // Get the container element where the checkboxes will be added
                var container = $('#checkbox-container');
    
                // Clear the container before adding checkboxes
                container.empty();
    
                // Iterate over the vulnerability types
                vulnerabilityTypes.forEach(function(vulnerabilityType) {
                // Create a checkbox element
                var checkbox = $('<input>').attr({
                    type: 'checkbox',
                    name: 'vulnerability_types[]',
                    value: vulnerabilityType.id,
                    class: `peer/vul${vulnerabilityType.id} vul`,
                    id: `vul${vulnerabilityType.id}` 
                });

                if(checkbox.attr('id')==checkbox.attr('value')){
                    checkbox.attr('checked', true)
                }
    
                // Create a label element for the checkbox
                var label = $('<label>').text(vulnerabilityType.name).attr({
                    for: `vul${vulnerabilityType.id}`,
                    class: `peer-checked/vul${vulnerabilityType.id}:text-blue-main`
                });
    
                // // Append the checkbox and label elements to the container
                // container.append(checkbox);
                // container.append(label);
                var divContainer = $('<div>').attr('class', 'flex items-center gap-2');
                // Menambahkan checkbox dan label ke dalam div container
                    divContainer.append(checkbox);
                    divContainer.append(label);

                // Menambahkan div container ke dalam elemen lain (misalnya body)
                    container.append(divContainer);
            });
    
            // Set the action flag to create
            isCreateAction = true;
    
            // Open modal
            $('#modal-vulnerability').modal('show');
            },
            error: function(xhr, status, error) {
                // Handle the error
                console.log(xhr.responseText);
            }
        });
    });
    
    
    $('body').on('click', '#btn-edit-vulnerability', function () {
        student_id = $(this).data('id');
    
        // Fetch vulnerability type with AJAX
        $.ajax({
            url: '/getVulnerabilityType',
            type: 'GET',
            cache: false,
            success: function(response) {
    
                var vulnerabilityTypes = response;
    
                // Get the container element where the checkboxes will be added
                var container = $('#checkbox-container');
    
                // Clear the container before adding checkboxes
                container.empty();
    
                // Fetch the student's existing vulnerabilities
                $.ajax({
                    url: '/fetchStudentVulnerability',
                    type: 'GET',
                    data: { student_id: student_id },
                    success: function(response) {
    
                        var studentVulnerabilities = response.vulnerabilities;
    
                        var studentVulnerabilityIds = studentVulnerabilities[0].vulnerability_type.split(',');
    
                        // Get the container element where the checkboxes will be added
                        var container = $('#checkbox-container');

                        // Clear the container before adding checkboxes
                        container.empty();

                        // Iterate over the vulnerability types
                        vulnerabilityTypes.forEach(function(vulnerabilityType) {
                        // Create a checkbox element
                        var checkbox = $('<input>').attr({
                            type: 'checkbox',
                            name: 'vulnerability_types[]',
                            value: vulnerabilityType.id,
                            class: `peer/vul${vulnerabilityType.id} vul`,
                            id: `vul${vulnerabilityType.id}` 
                        });

                        // Check if the student has the current vulnerability type
                        var hasVulnerability = studentVulnerabilityIds.includes(vulnerabilityType.id.toString());
                        
                        // Set the checkbox status
                        checkbox.prop('checked', hasVulnerability);

                        // Create a label element for the checkbox
                        var label = $('<label>').text(vulnerabilityType.name).attr({
                            for: `vul${vulnerabilityType.id}`,
                            class: `peer-checked/vul${vulnerabilityType.id}:text-blue-main`
                        });

                        var divContainer = $('<div>').attr('class', 'flex items-center gap-2');
                        // Menambahkan checkbox dan label ke dalam div container
                            divContainer.append(checkbox);
                            divContainer.append(label);

                        // Menambahkan div container ke dalam elemen lain (misalnya body)
                            container.append(divContainer);

                        });
    
                        // Set the action flag to edit
                        isCreateAction = false;
    
                        // Open modal
                        $('#modal-vulnerability').modal('show');
                    },
                    error: function(xhr, status, error) {
                        // Handle the error
                        console.log(xhr.responseText);
                    }
                });
            },
            error: function(xhr, status, error) {
                // Handle the error
                console.log(xhr.responseText);
            }
        });
    });
    
    
    // Save button event
        //action create student
    $('#confirm').click(function(e) {
        e.preventDefault();
    
        // Get the selected checkboxes
        var selectedCheckboxes = $('input[name="vulnerability_types[]"]:checked');
    
        // Create an array to store the selected vulnerability type IDs
        var selectedVulnerabilityType = [];

        console.log(selectedVulnerabilityType);
    
        // Iterate over the selected checkboxes and extract the IDs
        selectedCheckboxes.each(function () {
            selectedVulnerabilityType.push($(this).val());
        });
    
        if (isCreateAction) {
            // Make an AJAX request to save the selected vulnerability types
            $.ajax({
                url: `/addVulnerability/${student_id}`,
                type: 'POST',
                data: {
                    vulnerability_type: selectedVulnerabilityType,
                    _token: token
                },
                success: function(response) {
                    // Handle the success response
                    var vulnerabilityData = response;
                    var vulnerabilityTypeIds = response.vulnerability_type;
    
                    // AJAX request to fetch vulnerability names
                    $.ajax({
                        url: '/getVulnerabilityNames',
                        type: 'GET',
                        data: { vulnerabilityTypeIds: vulnerabilityTypeIds },
                        success: function(response) {
                            //show success message
                            Swal.fire({
                                icon: 'success',
                                title: `${vulnerabilityData.message}`,
                                showConfirmButton: false,
                                timer: 3000
                            });
    
                            //data post
                            let post = `
                                <div id="index_${vulnerabilityData.student_id}" class="cursor-pointer w-full py-5 flex bg-white drop-shadow rounded-xl px-6 items-center gap-12">
                
                                    <div class="flex items-center gap-4">
                                        <div class="w-12 h-12 rounded-md bg-cover bg-center" style="background-image: url({{Auth()->user()->profile_photo_url }})"></div>
                                        <p class="text-header font-semibold text-[16px] no-underline">${vulnerabilityData.student_name}</p>
                                    </div>

                                    <p class="text-subheader/60 font-semibold text-xs flex items-center gap-14 no-underline">${vulnerabilityData.classroom_name}<span>Male</span></p>
                
                                    <div class="ml-auto"></div>
                
                                    <ul class="flex gap-3 items-start flex-wrap flex-shrink-0 w-[35%] font-Mulish bg-red-150">`
                                        ;
                                        // Iterate over the vulnerability names
                                        response.names.forEach(function(name) {
                                            post += `<li class="py-1.5 px-3 rounded text-[10px] font-bold tracking-wide bg-[#FFF9F0] text-[#FFB033]">
                                                        ${name}
                                                     </li>`;
                                        });
                                        post += `
                                        
                                        @foreach ($item->vulnerability_name as $vulnerabilityName)
                                            
                                        @endforeach
                                    </ul>

                                        <a>
                                            <svg class="" width="7" height="16" viewBox="0 0 9 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M1 16.6225L7.43043 10.192C8.18986 9.4326 8.18986 8.18991 7.43043 7.43048L1 1" stroke="#676767" stroke-opacity="0.5" stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
                                            </svg>                        
                                        </a>
                                </div>
                            `;
                            
                            //append to post data
                            $(`#index_${vulnerabilityData.student_id}`).replaceWith(post);
                        },
                        error: function(xhr, status, error) {
                            // Handle the error
                            console.log(xhr.responseText);
                        }
                    });
                    // Hide modal
                    $('#modal-vulnerability').modal('hide');
                },
                error: function(xhr, status, error) {
                    // Handle the error
                    console.log(xhr.responseText);
                }
            });
        } 
        else {
            // Make an AJAX request to save the selected vulnerability types
            $.ajax({
                url: `/editVulnerability/${student_id}`,
                type: 'POST',
                data: {
                    vulnerability_type: selectedVulnerabilityType,
                    _token: token
                },
                success: function(response) {
                    // Handle the success response
                    var vulnerabilityData = response;
                    var vulnerabilityTypeIds = response.vulnerability_type;
    
                    // AJAX request to fetch vulnerability names
                    $.ajax({
                        url: '/getVulnerabilityNames',
                        type: 'GET',
                        data: { vulnerabilityTypeIds: vulnerabilityTypeIds },
                        success: function(response) {
                            //show success message
                            Swal.fire({
                                icon: 'success',
                                title: `${vulnerabilityData.message}`,
                                showConfirmButton: false,
                                timer: 3000
                            });
    
                            //data post
                            let post = `
                                <div id="index_${vulnerabilityData.student_id}" class="cursor-pointer w-full py-5 flex bg-white drop-shadow rounded-xl px-6 items-center gap-12">
                
                                    <div class="flex items-center gap-4">
                                        <div class="w-12 h-12 rounded-md bg-cover bg-center" style="background-image: url({{Auth()->user()->profile_photo_url }})"></div>
                                        <p class="text-header font-semibold text-[16px] no-underline">${vulnerabilityData.student_name}</p>
                                    </div>

                                    <p class="text-subheader/60 font-semibold text-xs flex items-center gap-14 no-underline">${vulnerabilityData.classroom_name}<span>Male</span></p>
                
                                    <div class="ml-auto"></div>
                
                                    <ul class="flex gap-3 items-start flex-wrap flex-shrink-0 w-[35%] font-Mulish bg-red-150">`
                                        ;
                                        // Iterate over the vulnerability names
                                        response.names.forEach(function(name) {
                                            post += `<li class="py-1.5 px-3 rounded text-[10px] font-bold tracking-wide bg-[#FFF9F0] text-[#FFB033]">
                                                        ${name}
                                                     </li>`;
                                        });
                                        post += `
                                        
                                        @foreach ($item->vulnerability_name as $vulnerabilityName)
                                            
                                        @endforeach
                                    </ul>

                                        <a>
                                            <svg class="" width="7" height="16" viewBox="0 0 9 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M1 16.6225L7.43043 10.192C8.18986 9.4326 8.18986 8.18991 7.43043 7.43048L1 1" stroke="#676767" stroke-opacity="0.5" stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
                                            </svg>                        
                                        </a>
                                </div>
                            `;
                            
                            //append to post data
                            $(`#index_${vulnerabilityData.student_id}`).replaceWith(post);
                        },
                        error: function(xhr, status, error) {
                            // Handle the error
                            console.log(xhr.responseText);
                        }
                    });
    
                    // Hide modal
                    $('#modal-vulnerability').modal('hide');
                },
                error: function(xhr, status, error) {
                    // Handle the error
                    console.log(xhr.responseText);
                }
            });
        }
    
    
    });
    </script>